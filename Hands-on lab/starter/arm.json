{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "suffix": {
      "type": "string"
    },
    "region": {
      "type": "string",
      "defaultValue": "northeurope"
    }
  },
  "variables": {
    "region": "[parameters('region')]",
    "dbName": "LicensePlates",
    "funcNetName": "[concat('sw-func-net-', parameters('suffix'))]",
    "funcNodeName": "[concat('sw-func-node-', parameters('suffix'))]",
    "planNetName": "[concat('sw-funcplan-net-', parameters('suffix'))]",
    "planNodeName": "[concat('sw-funcplan-node-', parameters('suffix'))]",
    "storageNetName": "[concat('swfuncnet', parameters('suffix'))]",
    "storageNodeName": "[concat('swfuncnode', parameters('suffix'))]",
    "eventGridName": "[concat('sw-events-', parameters('suffix'))]",
    "blobStorageName": "[concat('swblobs', parameters('suffix'))]",
    "visionName": "[concat('sw-ocr-', parameters('suffix'))]",
    "cosmosName": "[concat('swcosmos', parameters('suffix'))]",
    "insightsName": "[concat('sw-insights-', parameters('suffix'))]",
    "keyVaultName": "[concat('sw-keys-', parameters('suffix'))]",
    "containers": "[createarray('Processed', 'NeedsManualReview')]",
    "partitionKeys": "[createarray('/licensePlateText', '/fileName')]",
    "funcNetIdentity": "[concat(resourceId('Microsoft.Web/sites', variables('funcNetName')), '/providers/Microsoft.ManagedIdentity/Identities/default')]",
    "funcNodeIdentity": "[concat(resourceId('Microsoft.Web/sites', variables('funcNodeName')), '/providers/Microsoft.ManagedIdentity/Identities/default')]"
  },
  "resources": [
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2016-02-01-preview",
      "name": "[variables('visionName')]",
      "location": "[variables('region')]",
      "sku": {
        "name": "F0"
      },
      "kind": "ComputerVision",
      "properties": {}
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2019-08-01",
      "name": "[variables('cosmosName')]",
      "location": "[variables('region')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[variables('region')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2019-08-01",
      "name": "[concat(variables('cosmosName'), '/', variables('dbName'))]",
      "dependsOn": [
        "[variables('cosmosName')]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('dbName')]"
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2019-08-01",
      "name": "[concat(variables('cosmosName'), '/', variables('dbName'), '/', variables('containers')[copyIndex()])]",
      "dependsOn": [
        "[variables('dbName')]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('containers')[copyIndex()]]",
          "partitionKey": {
            "paths": [
              "[variables('partitionKeys')[copyIndex()]]"
            ]
          }
        },
        "options": {
          "throughput": "400"
        }
      },
      "copy": {
        "name": "containersCopy",
        "count": "[length(variables('containers'))]"
      }
    },
    {
      "type": "Microsoft.EventGrid/topics",
      "apiVersion": "2018-01-01",
      "name": "[variables('eventGridName')]",
      "location": "[variables('region')]",
      "properties": {}
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('insightsName')]",
      "location": "[variables('region')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "Request_Source": "rest",
        "ApplicationId": "[variables('insightsName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('storageNetName')]",
      "location": "[variables('region')]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('storageNodeName')]",
      "location": "[variables('region')]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('blobStorageName')]",
      "location": "[variables('region')]",
      "kind": "BlobStorage",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('planNetName')]",
      "location": "[variables('region')]",
      "properties": {
        "name": "[variables('planNetName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('planNodeName')]",
      "location": "[variables('region')]",
      "properties": {
        "name": "[variables('planNodeName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('funcNetName')]",
      "location": "[variables('region')]",
      "dependsOn": [
        "[variables('planNetName')]",
        "[variables('visionName')]",
        "[variables('eventGridName')]",
        "[variables('cosmosName')]",
        "[variables('storageNetName')]",
        "[variables('blobStorageName')]",
        "[variables('insightsName')]"
      ],
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planNetName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "computerVisionApiUrl",
              "value": "[concat(reference(variables('visionName')).endpoint, 'vision/v2.0/ocr')]"
            },
            {
              "name": "cosmosDBEndPointUrl",
              "value": "[reference(variables('cosmosName')).documentEndpoint]"
            },
            {
              "name": "cosmosDBDatabaseId",
              "value": "LicensePlates"
            },
            {
              "name": "cosmosDBCollectionId",
              "value": "Processed"
            },
            {
              "name": "eventGridTopicEndpoint",
              "value": "[reference(variables('eventGridName')).endpoint]"
            },
            {
              "name": "exportCsvContainerName",
              "value": "export"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(variables('insightsName')).InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageNetName'), ';AccountKey=', listKeys(variables('storageNetName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageNetName'), ';AccountKey=', listKeys(variables('storageNetName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('funcNetName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('funcNodeName')]",
      "location": "[variables('region')]",
      "dependsOn": [
        "[variables('planNodeName')]",
        "[variables('storageNodeName')]",
        "[variables('insightsName')]"
      ],
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planNodeName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(variables('insightsName')).InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageNodeName'), ';AccountKey=', listKeys(variables('storageNodeName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageNodeName'), ';AccountKey=', listKeys(variables('storageNodeName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageNodeName'), ';AccountKey=', listKeys(variables('storageNodeName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('funcNodeName'))]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.14.1"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2016-10-01",
      "location": "[variables('region')]",
      "dependsOn": [
        "[variables('funcNetName')]",
        "[variables('funcNodeName')]"
      ],
      "properties": {
        "tenantId": "[reference(variables('funcNetIdentity'), '2015-08-31-PREVIEW').tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[reference(variables('funcNetIdentity'), '2015-08-31-PREVIEW').tenantId]",
            "objectId": "[reference(variables('funcNetIdentity'), '2015-08-31-PREVIEW').principalId]",
            "permissions": {
              "secrets": [
                "list",
                "get"
              ]
            }
          },
          {
            "tenantId": "[reference(variables('funcNodeIdentity'), '2015-08-31-PREVIEW').tenantId]",
            "objectId": "[reference(variables('funcNodeIdentity'), '2015-08-31-PREVIEW').principalId]",
            "permissions": {
              "secrets": [
                "list",
                "get"
              ]
            }
          }
        ],
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/blobStorageConnection')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('blobStorageName'), ';AccountKey=', listKeys(variables('blobStorageName'),'2015-05-01-preview').key1)]"
      },
      "dependsOn": [
        "[variables('keyVaultName')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/computerVisionApiKey')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(variables('visionName'),'2017-04-18').key1]"
      },
      "dependsOn": [
        "[variables('keyVaultName')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/cosmosDBAuthorizationKey')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(variables('cosmosName'),'2016-03-31').primaryMasterKey]"
      },
      "dependsOn": [
        "[variables('keyVaultName')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/eventGridTopicKey')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(variables('eventGridName'),'2019-01-01').key1]"
      },
      "dependsOn": [
        "[variables('keyVaultName')]"
      ]
    }
  ],
  "outputs": {
    "funcNetName": {
      "type": "string",
      "value": "[variables('funcNetName')]"
    },
    "blobStorageConnection": {
      "type": "string",
      "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('blobStorageConnection').secretUriWithVersion, ')')]"
    },
    "computerVisionApiKey": {
      "type": "string",
      "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('computerVisionApiKey').secretUriWithVersion, ')')]"
    },
    "cosmosDBAuthorizationKey": {
      "type": "string",
      "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('cosmosDBAuthorizationKey').secretUriWithVersion, ')')]"
    },
    "eventGridTopicKey": {
      "type": "string",
      "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('eventGridTopicKey').secretUriWithVersion, ')')]"
    }
  }
}